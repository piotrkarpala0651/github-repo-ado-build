name: Update Release Notes

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
        releaseId: 
            description: 'The Id of the release to update'
            required: true
            type: number
jobs:
  update-release-notes:
    runs-on: ubuntu-latest

    steps:

      - name: Install dependencies
        run: npm install @actions/http-client

      - name: Update release notes
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const httpm = require('@actions/http-client');
            const { owner, repo, release } = context.repo;

            console.log('Release event payload:', context.payload.release);
            console.log('Release Id:', context.payload.release?.id);

            console.dir(context?.payload?.release);

            const releaseId = core.getInput('releaseId') || context.payload.release.id;

            if (!releaseId) {
              core.setFailed('No release id provided');
              return;
            }

            core.info(`Updating release notes for release ${releaseId}`);


            // Get the release
            const releaseResponse = await github.rest.repos.getRelease({
              owner,
              repo,
              release_id: releaseId
            });

            console.log('Current release notes:', releaseResponse.data.body);

            const body = releaseResponse.data.body;

            // find all the work item ids, making sure the regex is greedy
            const workItemIds = body.match(/AB#\d+/g).map((id) => id.replace('AB#', ''));

            // replace all AB#
            const newBody = body.replace(/AB#(\d+)/g, '[AB#$1](https://dev.azure.com/piotrkarpala0651/github-repo-ado-build/_workitems/edit/$1)');

            console.log('New release notes:', newBody);

            // Update the release notes

            await github.rest.repos.updateRelease({
                owner,
                repo,
                release_id: releaseId,
                body: newBody
            });